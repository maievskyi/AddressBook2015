// TinyPIM (c) 1999 Pablo Halpern. File Address.h
//Русский текст-коммент во всех ф

#ifndef Address_dot_h
#define Address_dot_h 1

#include <string>

// Address class implemented using std::string class
class Address
{
public:
  // Default constructor initializes recordId to 0
  // and all strings to empty.
  // конст по умолч инициализирует recordId знач = 0
  // все остальн поля-строки остаются пустыми
  // //использование полного имени в объявлении члена не допускается" в C++
  //Address::Address() : recordId_(0) { } // неправильно     my
	Address() : recordId_(0) {} //правильно                  my  +++++++++++++

  // The following are automatically generated by the compiler:  
  // ~Address();
  // Address(const Address&);
  // Address& operator=(const Address&);

  // Field accessors
  //  ~~~~~~~~~~~~~    далее - пары перегруженных функций для вывода или записи в поля объекта ~~~~
  int recordId() const { return recordId_; }//конст метод выв поля  +++++++++++++++++
  void recordId(int i) { recordId_ = i; }//неконс мет с неконст арг запис в поле   +++++++++++++

  std::string lastname() const { return lastname_; }//конст метод выв поля
  void lastname(const std::string&);//неконс мет с конст арг запис в поле обьекта

  std::string firstname() const { return firstname_; }//конст метод выв поля
  void firstname(const std::string&);//неконс мет с конст арг запис в поле обьекта

  std::string phone() const { return phone_; }//конст метод выв поля
  void phone(const std::string&);//неконс мет с конст арг запис в поле обьекта

  std::string address() const { return address_; }//конст метод выв поля
  void address(const std::string&);//неконс мет с конст арг запис в поле обьекта

private:
  // Data_ Fields            поля_
  int         recordId_;  // added ++++++++++++++++++++++++++++++
  std::string lastname_;
  std::string firstname_;
  std::string phone_;
  std::string address_;
};

#endif // Address_dot_h
